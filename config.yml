variables: private/secretfile.yml

web_server:
  bind: 0.0.0.0
  port: 3539
  web_ui: yes

templates:
  global:
    # 10 gigas d'espace disque au minimum
    free_space:
      path: '{? download.defaultPath ?}'
      space: 10000

    # Require at least 15 seeds of any torrent
    #torrent_alive:
    #  min_seeds: 15
    #  reject_for: 2 hours

    disable:
      - private_torrents
    verify_ssl_certificates: no

    transmission:
      host: localhost
      port: 8072
      username: '{? transmission.username ?}'
      password: '{? transmission.password ?}'
      include_subs: yes
      main_file_only: yes
      ratio: 6
      path: '{? transmission.path ?}'
   
    # Size and seed restrictions require real torrents
    magnets: no
  
  tv:
    tmdb_lookup: yes
    include:
      - private/series.yml
    transmission:
      #content_filename: "{{series_name}} - {{series_id}} - {{quality}}"
      path: '{? transmission.series_movedone ?}'

    # Push notification Mobile
    notify:
      entries:
        title: "{{series_name}} {{series_id}}"
        message: "{{series_name}} {{series_id}}\n\n{{title}}\n\nSize: {{content_size}}MB\n\nDownloaded by: {{task}}" 
        via:
          - pushbullet:
              api_key: '{? pushbullet.apikey ?}'
      
  imdb_watchlist:
    seen: local
    retry_failed:
      max_retries: 10
    accept_all: yes
    no_entries_ok: yes
    disable:
      - download
      - transmission
      - remember_rejected
      - retry_failed

  movies:
    quality: 720p+
    content_size: { min: 1000, max: 15000 }
    regexp:
      reject:
        # Avoid certain groups.
        - '(?x) [\W_] (?: maxspeed | tnt[\W_]*village | cocain | wdr | msd | nnd | thc | ssdd | crys ) $'
        # I don't have any 3D displays
        - \b3-?D\b
        # Flexget doesn't recognize "line" as an audio quality.
        - '(?x) [\W_] (?: line ) (?:\.|_|\b)'
        # Avoid Series Episodes
        - s\d+e\d+
        - '(?x) [\W_] (?: screener ) (?:\.|_|\b)'
        - '(?x) [\W_] (?: trailer ) (?:\.|_|\b)'
        - '(?x) [\W_] (?: R5 ) (?:\.|_|\b)'                      
        - '(?x) [\W_] (?: TS ) (?:\.|_|\b)'
        - '(?x) [\W_] (?: WEBSCR ) (?:\.|_|\b)'                            
        - '(?x) [\W_] (?: Cam ) (?:\.|_|\b)'
        - '(?x) [\W_] (?: CamRip ) (?:\.|_|\b)'
        # Reject rar/packs/password
        - \.rar|\.r\d\d|password.txt|\.zip
      from: title
    seen_movies: strict # Don't download movies we've already seen

    # Don't download movies in watchlist
    crossmatch:
      from:
        - imdb_list:
            list: ratings
            login: '{? imdb.login ?}'
            password: '{? imdb.password ?}'
      fields:
        - imdb_id
      action: reject

    # Check for already downloaded manually movies
    exists_movie:
      path:
        - '{? download.defaultPath ?}'
        - '{? movies.pathVF ?}'
        - '{? movies.pathVO ?}'
      type: files
      lookup: imdb
  
    imdb_lookup: yes
    require_field:
      - imdb_id
      - imdb_name
      - imdb_year
      - imdb_url
      - imdb_languages
      - imdb_genres

    # Filter to accept entries
    list_match:
      from:
        - movie_list: watchlist

    set:
      content_filename: "{{ imdb_name|replace('/', '_')|replace(':', ' -') }} ({{ imdb_year }}) - {{ quality }}"

    if:
      - "'french' == (imdb_languages or ['french'])[0]":
          set:
            path: '{? movies.pathVF ?}'
      - "'french' != (imdb_languages or ['french'])[0]":
          set:
            path: '{? movies.pathVO ?}'

    # Push notification Mobile
    notify:
      entries:
        title: "{{imdb_name}} {{imdb_year}} ({{imdb_score}})"
        message: "Genres: {{ imdb_genres|join(', ') }}\n\nTitle: {{title}}\nQuality: {{quality}}\nSize: {{content_size}}MB\n\nDownloaded by: {{task}}"
        via:
          - pushbullet:
              api_key: '{? pushbullet.apikey ?}'
              url: "{% if imdb_url %}{{ imdb_url }}{% endif %}"

  subtitled:
    if:
      - "'french' != (imdb_languages or ['french'])[0]":
          regexp:
            reject_excluding:
              # Only accept VOSTFR or Multi sub
              - '(?x) [\W_] (?: VOSTFR | MULTISUB | MULTI ) (?:\.|_|\b)'
            from: title

  movies_discover:
     # Don't download movies in watchlist
    crossmatch:
      from:
        - imdb_list:
            list: watchlist
            login: '{? imdb.login ?}'
            password: '{? imdb.password ?}'
      fields:
        - imdb_id
      action: reject

    if:
      - 'imdb_year < now.year - 3': reject
      # Probably a standup comedy.
      - "'comedy' in (imdb_genres or []) and 1 == len(imdb_actors or [])": reject
      # French Movie
      - "'french' == (imdb_languages or ['french'])[0]":
          imdb:
            min_score: 6.4
            min_votes: 150
      # VO Movie
      - "'french' != (imdb_languages or ['french'])[0]":
          imdb:
            min_score: 7.4
            min_votes: 300
      # Restrictions Notes on specific genres
      - "'drama' in (imdb_genres or []) or 'war' in (imdb_genres or []) or 'romance' in (imdb_genres or [])":
          imdb:
            min_score: 7.7
            min_votes: 400
      - "set(['animation', 'family']).issubset(set(imdb_genres or []))":
          imdb:
            min_score: 7.8
            min_votes: 400

  xt_config:
    disable: 
      - torrent_alive
      - remember_rejected
      - private_torrents
    manipulate:
      - url:
          replace:
            regexp: '(details.php\?id=([0-9]+)&hit=1)'
            format: 'download.php?torrent=\2&torrent_pass={? xt.passkey ?}'

tasks:
  
  # Specific Task to download monthly newspaper
  PressTorrent:
    priority: 15
    t411:
      category: Presse
    only_new: yes
    disable: 
      - inputs
      - content_size
      - torrent_alive
    regexp:
      accept:
        - '60 millions de consommateurs'
        - 'What Hi-Fi'
        - 'Marmiton'
        - ca m'interesse
    exists:
      - '{? press.exists ?}'
    set:
      path: '{? press.path ?}'

  # Search torrent on Dropbox specific synchronised directory
  DropboxTorrent:
    priority: 2
    disable: yes
    disable:
      - seen_movies
      - inputs
      - regexp
      - content_size
      - torrent_alive
    plugin_priority:
      exec: 0
    filesystem:
      path: '{? dropbox.pathTorrent ?}'
      mask: '*.torrent'
      recursive: yes
      retrieve: files
    no_entries_ok: yes
    exec:
      on_output:
        for_accepted: rm "{{location}}"
    accept_all: yes
    set:
      path: '{? dropbox.path ?}'
    # Push notification Mobile
    notify:
      entries:
        title: "Seedbox: {{title}} downloaded\n\n"
        message: ""
        via:
          - pushbullet:
              api_key: '{? pushbullet.apikey ?}'
      

  ###################
  # TV Shows
  ###################

  TV-SHOWS_rss:
    priority: 5
    include:
      - private/input-tvshows-rss.yml
    template: 
      - tv
      - subtitled

  TV-SHOWS_discover:
    priority: 5
    include: 
      - private/config-t411.yml
    discover:
      what:
        - next_series_episodes: yes
      from:
        - t411: 
            category: SÃ©rie TV
            terms:
              - VOSTFR
              - HDrip 1080
              - Web-Dl 1080
              - TVripHD 1080
              - HDrip 720
              - Web-DL 720
              - TVripHD 720
    template:
      - tv
      - subtitled

  TV-SHOWS_xt:
    priority: 10
    include:
      - private/input-tvshows-xt.yml
    template:
      - tv
      - subtitled
      - xt_config

  TV-SHOWS_abn:
    priority: 10
    include:
      - private/input-tvshows-abn.yml
    template:
      - tv
      - subtitled

  ###################
  # Movies WatchList
  ###################
 
  # Update IMDB watchlist
  Movies_queue_add_from_imdb:
    priority: 8
    imdb_list:
      login: '{? imdb.login ?}'
      password: '{? imdb.password ?}'
      list: watchlist
    list_add:
      - movie_list: watchlist
    template: 
      - no_global # None of the global templates make sense here
      - imdb_watchlist

  # Delete already rated movies from IMDB watchlist
  Movies_queue_delete_from_imdb:
    priority: 8
    include: 
      - private/input-ratings.yml
    list_remove:
      - movie_list: watchlist
    template: 
      - no_global # None of the global templates make sense here
      - imdb_watchlist

  Movies_watchlist_t411:
    priority: 10
    t411: 
      category: Film
      terms:
        - VOSTFR
        - HDrip 720
        - HDrip 1080
    template:
      - movies
      - subtitled

  Movies_watchlist:
    priority: 10
    include:
      - private/input-movies-rss.yml
    template:
      - movies
      - subtitled

  Movies_watchlist_xt:
    priority: 10
    include:
      - private/input-movies-xt.yml
    template:
      - movies
      - subtitled
      - xt_config

  Movies_watchlist_abn:
    priority: 10
    include:
      - private/input-movies-abn.yml
    template:
      - movies
      - subtitled

  ###################
  # Movies Discover
  ###################

  Movies_discover_t411:
    priority: 15
    t411: 
      category: Film
      terms:
        - VOSTFR
        - HDrip 720
        - HDrip 1080
    template:
      - movies
      - movies_discover
      - subtitled

  Movies_discover:
    priority: 15
    include:
      - private/input-movies-rss.yml
    template:
      - movies
      - movies_discover
      - subtitled

  Movies_discover_xt:
    priority: 15
    include:
      - private/input-movies-xt.yml
    template:
      - movies
      - movies_discover
      - subtitled
      - xt_config

  Movies_discover_abn:
    priority: 15
    include:
      - private/input-movies-abn.yml
    template:
      - movies
      - movies_discover
      - subtitled

  ###################
  # Subtitles
  ###################

  Subtitles:
    template: no_global # None of the global templates make sense here
    priority: 20
    filesystem:
      path: 
        - '{? subtitles.path1 ?}'
        #- '{? subtitles.path2 ?}'
      recursive: yes
      retrieve: files
      regexp: '.*\.(avi|mkv|mp4)$'
    accept_all: yes
    seen: local
    disable:
      - transmission
      - retry_failed
    regexp: 
      reject:
        - '(?x) [\W_] (?: french | VOSTFR | Multi | sample ) (?:\.|_|\b)'
      from: url
    subliminal:
      authentication:
        addic7ed:
          username: '{? subtitles.addic7ed.username ?}'
          password: '{? subtitles.addic7ed.password ?}'
        opensubtitles:
          username: '{? subtitles.opensubtitles.username ?}'
          password: '{? subtitles.opensubtitles.password ?}'
      languages:
        - fra
      exact_match: yes
  
  StopSeeding:
    clean_transmission:
      port: 8072
      host: localhost
      username: '{? transmission.username ?}'
      password: '{? transmission.password ?}'
      min_ratio: 4
    template: no_global
    disable: [details]
      

schedules:
    
  #
  # Local
  #
  - tasks: [DropboxTorrent]
    interval:
      minutes: 5

  #Unhandled error in plugin torrent_alive: 'generator' object is not an iterator
  # Subtitles
  #
  #- tasks: [Subtitles]
  #  interval:
  #    hours: 1

  #
  # IMDB Watchlist update
  #
  - tasks: [Movies_queue_*, StopSeeding]
    interval:
      hours: 4
      
  #
  # Tv Shows
  #
  - tasks: [TV-SHOWS_*]
    interval:
      hours: 3

  #
  # Movies Watchlist
  #
  - tasks: [Movies_watchlist*]
    interval:
      hours: 4

  #
  # Movies Discover
  #
  - tasks: [Movies_discover_*, PressTorrent]
    interval:
      hours: 6
